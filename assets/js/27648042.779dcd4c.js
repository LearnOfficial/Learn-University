"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[545],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>y});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),c=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},v=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),v=a,y=p["".concat(l,".").concat(v)]||p[v]||d[v]||o;return t?n.createElement(y,i(i({ref:r},u),{},{components:t})):n.createElement(y,i({ref:r},u))}));function y(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=v;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}v.displayName="MDXCreateElement"},3062:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const o={},i="GraphQL Resolvers and Types",s={unversionedId:"server/dev/resolvers",id:"server/dev/resolvers",title:"GraphQL Resolvers and Types",description:"We use TypeGraphQL to define the object types and resolvers used in our",source:"@site/docs/server/dev/resolvers.md",sourceDirName:"server/dev",slug:"/server/dev/resolvers",permalink:"/Learn/docs/server/dev/resolvers",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Entities",permalink:"/Learn/docs/server/dev/entities"},next:{title:"Getting Started with Learn Client",permalink:"/Learn/docs/client/intro"}},l={},c=[{value:"Query",id:"query",level:2},{value:"Mutations",id:"mutations",level:2}],u={toc:c},p="wrapper";function d(e){let{components:r,...t}=e;return(0,a.kt)(p,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"graphql-resolvers-and-types"},"GraphQL Resolvers and Types"),(0,a.kt)("p",null,"We use TypeGraphQL to define the object types and resolvers used in our\nGraphQL implementation."),(0,a.kt)("h2",{id:"query"},"Query"),(0,a.kt)("p",null,"There is only one query where the user starts with Learner and Technique\n, and then can navigate down to Event, Activity, and LearningFiles.\nWe called this chaining query."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-GraphQL"},"query chainQuery {\n    learner {\n        id\n        events {\n            id\n            learningFiles {\n                id\n            }\n            activities {\n                id\n                learningFiles {\n                    id\n                }\n            }\n        }\n        techniques {\n            id\n        }\n    }\n}\n")),(0,a.kt)("h2",{id:"mutations"},"Mutations"),(0,a.kt)("p",null,"Mutations refer to changes to a service in GraphQL terms,\nwhich are only applied with a secret token provided\nduring user registration."),(0,a.kt)("p",null,"The mutations are the same of entities methods you should read that\nsection."))}d.isMDXComponent=!0}}]);